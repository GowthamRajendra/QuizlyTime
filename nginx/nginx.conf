worker_processes 1;

events { worker_connections 1024; }

http {
    log_format upstreamlog '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           'upstream: $upstream_addr '
                           'host: $host '
                           'request_time: $request_time '
                           'upstream_response_time: $upstream_response_time';
    
    access_log /dev/stdout upstreamlog;

    upstream flask_backend {
        server backend1:5000;
        server backend2:5000;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://flask_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # request buffering required for properly streaming request bodies.
            # without it, request will hang and fail.
            # for example, login route with email and password in the body.
            proxy_request_buffering off;
            proxy_buffering off;
        }
    }
}